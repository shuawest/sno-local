---

# https://docs.ansible.com/ansible/latest/collections/community/general/homebrew_module.html

- name: Check prerequisites. Install automatable. Instruct on manual steps.
  hosts: client
  gather_facts: yes
  tasks:

  ###
  # homebrew
  # - check that homebrew is installed if on MacOS


  ###
  # MacOS CLI commands

  - name: Install MacOS brew managed packages
    community.general.homebrew:
      update_homebrew: true
      upgrade_all: true
      name: "{{ brew_package_name }}"
      state: present
    loop_control:
      loop_var: brew_package_name
    with_items:  
    - 1password-cli
    - openshift-cli
    - kubectl
    - kubectx
    - argocd
    - tektoncd-cli
    - helm
    - odo
    
  ###
  # openshift-installer 
  #   - OpenShift for arm insaller - MacOS / arm64
  #     https://mirror.openshift.com/pub/openshift-v4/aarch64/clients/ocp/stable/openshift-install-mac-arm64.tar.gz

  - name: Check openshift-installer is globally available
    ansible.builtin.stat:
      path: /usr/local/bin/openshift-install
    register: openshift_installer_stat  

  - ansible.builtin.assert:
      that: openshift_installer_stat.stat.exists
      success_msg: "openshift-installer is available"
      fail_msg: "openshift-installer is not available in /usr/local/bin. Download and install for your chip architecture from https://console.redhat.com/openshift/downloads"

  - name: Get the openshift-install version information
    when: openshift_installer_stat.stat.exists
    ansible.builtin.shell: |
      openshift-install version
    register: openshift_installer_version_output
      
  - name: Show openshift-install version information
    when: openshift_installer_stat.stat.exists
    ansible.builtin.debug:
      msg: "{{ openshift_installer_version_output.stdout }}"


  ###
  # openshift-installer 
  
  - name: Check UTM is installed
    ansible.builtin.stat:
      path: "{{ lookup('env', 'HOME') }}/Library/Containers/com.utmapp.UTM/Data/Documents"
    register: utm_docs_stat  

  - name: Assert UTM is installed
    ansible.builtin.assert:
      that: utm_docs_stat.stat.exists
      success_msg: "UTM is installed"
      fail_msg: "UTM is not installed. Install from https://getutm.app/"


  ###
  # 1Password CLI 
  # - only when onepass_enabled
  # - op command can connect and get to vault
  # - openshift_pull_secret required value in 1Password 


  ###
  # Podman
  # - check podman is installed
  # - check podman is running


  ###
  # Ansible
  # - ansible is already installed if running prereqs 
  #   - add install directions in README.md
  # - check collections are initialized
  # - check python requirements are installed
  # - show python version - and describe how to configure


